#BlueJ class context
comment0.params=
comment0.target=void\ init()
comment0.text=\r\n\ Initializes\ all\ variables\ and\ reads\ in\ some\ \r\n\ photos\ for\ the\ game.\r\n
comment1.params=
comment1.target=void\ start()
comment1.text=\r\n\ This\ method\ asks\ for\ the\ number\ of\ players\ and\ then\r\n\ for\ each\ player\ asks\ for\ their\ name\ and\ color\r\n\ and\ makes\ sure\ none\ of\ the\ names\ or\ colors\ are\ the\ \r\n\ exact\ same.\ \r\n
comment10.params=
comment10.target=boolean\ clickTopDestinationCard()
comment10.text=\r\n\ Signals\ if\ the\ player\ wants\ to\ buy\ destination\r\n\ cards.\r\n\ @return\ true\ if\ they\ clicked\ the\ destination\ card\r\n\ or\ false\ if\ they\ didnt\r\n
comment11.params=
comment11.target=boolean\ clickBottomDestinationCard()
comment11.text=\r\n\ If\ you\ click\ the\ bottom\ destination\ card\r\n\ then\ it\ returns\ true.\r\n\ @return\ true\ if\ you\ click\ the\ destination\ \r\n\ card\ or\ false\ if\ you\ don't\ \r\n
comment12.params=
comment12.target=boolean\ scrollTechCardsToBuy()
comment12.text=\r\n\ Scrolls\ through\ the\ tech\ cards\ to\ buy\r\n\ @return\ true\ if\ you\ are\ hovering\ \r\n\ over\ the\ tech\ cards,\ false\ otherwise\r\n
comment13.params=
comment13.target=boolean\ scrollPlayerTechCards()
comment13.text=\r\n\ Scrolls\ through\ the\ players\ tech\ cards\r\n\ @return\ true\ if\ you\ are\ hovering\ over\r\n\ the\ player's\ technology\ cards\ and\ false\ otherwise\r\n
comment14.params=
comment14.target=void\ drawCityName()
comment14.text=\r\n\ If\ you\ are\ hovering\ over\ a\ city\ then\ it\ draws\ the\r\n\ city's\ name\ next\ to\ the\ city.\r\n
comment15.params=
comment15.target=void\ drawCityHighlite()
comment15.text=\r\n\ Draws\ the\ 2\ (or\ 3\ if\ France)\ cities\ of\ the\ destination\ card\r\n\ that\ the\ player\ is\ hovering\ over\r\n
comment16.params=name
comment16.target=void\ drawCity(java.lang.String)
comment16.text=\r\n\ Draws\ the\ city's\ name\r\n\ @param\ name\ -\ name\ of\ city\ to\ draw\r\n
comment17.params=
comment17.target=void\ drawTrackHighlite()
comment17.text=\r\n\ Draws\ on\ the\ highlite\ for\ when\ you\r\n\ are\ drawing\ a\ track\r\n
comment18.params=
comment18.target=void\ drawPoints()
comment18.text=\r\n\ Draws\ the\ Points\ Around\ the\ board\r\n
comment19.params=
comment19.target=void\ drawBoard()
comment19.text=\r\n\ Draws\ the\ board\ onto\ the\ buffer\r\n
comment2.params=e
comment2.target=void\ mouseClicked(java.awt.event.MouseEvent)
comment2.text=\r\n\ Gets\ the\ coordinates\ of\ a\ mouse\ click\ and\ \r\n\ saves\ if\ it\ was\ the\ left\ or\ right\ click\r\n\ @param\ e\ -\ MouseEvent\r\n
comment20.params=
comment20.target=void\ drawLeftSide()
comment20.text=\r\n\ Draws\ the\ stuff\ to\ the\ left\ side\ of\ the\ board\r\n
comment21.params=
comment21.target=void\ drawRightSide()
comment21.text=\r\n\ Draws\ stuff\ to\ the\ right\ side\ of\ the\ board\r\n
comment22.params=
comment22.target=boolean\ clickedBackButton()
comment22.text=\r\n\ Determines\ if\ you\ clicked\ the\ back\ button.\r\n\ @return\ true\ if\ you\ clicked\ the\ done\ button,\ false\ otherwise\r\n
comment23.params=
comment23.target=boolean\ clickedDoneButton()
comment23.text=\r\n\ Determines\ if\ you\ clicked\ the\ done\ button\ and\ makes\ a\ \r\n\ sound\ if\ you\ did\ depending\ on\ the\ phase\ of\ the\ game\r\n\ @return\ true\ if\ you\ clicked\ the\ done\ button,\ false\ otherwise\r\n
comment24.params=
comment24.target=void\ drawDoneButton()
comment24.text=\r\n\ Draws\ the\ done\ button\ based\ off\ which\ phase\ of\ \r\n\ game\ play\ you\ are\ in\ \r\n
comment25.params=
comment25.target=void\ draw3DestCardsPicked()
comment25.text=\r\n\ Picking\ 3\ destination\ cards\ mode\r\n
comment26.params=
comment26.target=void\ draw5DestCardsPicked()
comment26.text=\r\n\ Drawing\ 5\ destination\ cards\ picked\r\n
comment27.params=
comment27.target=void\ draw5DestCards()
comment27.text=\r\n\ Draws\ 5\ destination\ cards\ for\ the\ first\ round\r\n
comment28.params=
comment28.target=int\ click5DestCards()
comment28.text=\r\n\ Returns\ order\ of\ cards\ top\ row\:\r\n\ 0\ 1\ 2\r\n\ bottom\ row\:\r\n\ \ 3\ 4\r\n\ \ from\ left\ to\ right.\r\n\ \ @return\ int\ number\ of\ card\ clicked\ or\r\n\ \ -1\ if\ you\ did\ not\ click\ a\ card\r\n
comment29.params=
comment29.target=int\ hoverDestCards()
comment29.text=\r\n\ Hovers\ and\ returns\ the\ number\ of\ destination\r\n\ card\ you\ are\ hovering\ over\r\n\ Order\ for\ first\ turn\:\r\n\ 0\ 1\ 2\ \r\n\ 3\ 4\r\n\ Order\ for\ regular\ turn\:\r\n\ 0\ 1\ 2\r\n\ If\ you\ are\ hovering\ over\ your\r\n\ own\ stack\ of\ dest\ cards\ then\ 5\r\n\ @return\ the\ number\ of\ the\ dest\ card\ as\ \r\n\ illustrated\ above\r\n
comment3.params=e
comment3.target=void\ mouseEntered(java.awt.event.MouseEvent)
comment3.text=\r\n\ Repaints\ if\ the\ mouse\ reenters\ the\ applet\r\n\ @param\ e\ -\ MouseEvent\ that\ calls\ the\ function\r\n
comment30.params=i
comment30.target=void\ draw5DestCard5Choosen(int)
comment30.text=\r\n\ \ Draws\ the\ destination\ card\ selected\ based\ on\ the\ card\r\n\ \ @param\ i\ -\ number\ of\ card\ chosen\r\n
comment31.params=
comment31.target=void\ draw3DestCards()
comment31.text=\r\n\ Draws\ 3\ destination\ cards\ or\ fewer\ based\ on\ size\ of\ destination\r\n\ card\ deck.\r\n
comment32.params=
comment32.target=int\ click3DestCards()
comment32.text=\r\n\ Returns\ order\ of\ card\ clicked\ based\ off\ of\:\r\n\ 0\ 1\ 2\ from\ right\ to\ left\r\n\ -1\ if\ no\ card\ was\ clicked\r\n\ @return\ int\ of\ card\ number\ clicked\r\n
comment33.params=i
comment33.target=void\ draw3DestCardChoosen(int)
comment33.text=\r\n\ \ Draws\ the\ destination\ card\ selected\ based\ on\ the\ card\ number\r\n\ \ 0\ 1\ 2\ from\ left\ to\ right.\r\n\ \ @param\ i\ -\ number\ of\ card\ chosen\r\n
comment34.params=
comment34.target=void\ spendingTrainsCardClicked()
comment34.text=\r\n\ Draws\ the\ cards\ you\ want\ to\ use\ to\ buy\ a\ train\r\n\ and\ \r\n
comment35.params=
comment35.target=void\ drawTrainsUsedToBuy()
comment35.text=\r\n\ Shows\ the\ cards\ using\ to\ purchase\r\n
comment36.params=trains
comment36.target=void\ setNumOfTrainsDrawn(int[])
comment36.text=\r\n\ Set\ number\ of\ trains\ drawn\ based\ on\ the\ number\r\n\ of\ trains\ in\ the\ method\r\n\ @param\ trains-int\ array\ of\ number\ of\ cards\ for\ each\ color\r\n\ where\ index\ corresponds\ to\ color\ listed\ in\ EColor.\r\n
comment37.params=yOffset
comment37.target=int\ playerCardClicked(int)
comment37.text=\r\n\ Returns\ the\ index\ of\ the\ card\ the\ player\ clicked\r\n\ or\ -1\ if\ a\ player\ did\ not\ click\ the\ card\ in\ order\:\r\n\ 0\ 1\r\n\ 2\ 3\r\n\ 4\ 5\r\n\ 6\ 7\r\n\ 8\ \r\n\ @param\ yOffset\ -\ offset\ based\ on\ if\ it\ is\ the\ players\ hand\r\n\ or\ the\ cards\ on\ top\ indicating\ the\ cards\ being\ used\ to\ buy\r\n\ @return\ int\ corresponding\ to\ card\ as\ shown\ above\r\n
comment38.params=
comment38.target=void\ drawPlayerHand()
comment38.text=\r\n\ Draws\ the\ players\ hand\ based\ on\ the\ number\ of\ cards\r\n\ of\ each\ color\ they\ have.\r\n
comment39.params=num\ x\ y
comment39.target=void\ drawNumberOfTrains(int,\ int,\ int)
comment39.text=\r\n\ Draws\ the\ number\ of\ trains\ you\ have\ on\ the\ card\r\n\ \r\n\ @param\ num\ -\ number\ of\ the\ type\ of\ train\r\n\ @param\ x\ -\ x\ coordinate\ to\ draw\ oval\r\n\ @param\ y\ -\ y\ coordinate\ to\ draw\ oval\ \r\n
comment4.params=e
comment4.target=void\ mouseDragged(java.awt.event.MouseEvent)
comment4.text=\r\n\ Mouse\ dragged\ overrided\ method\ that\r\n\ does\ nothing\ except\ consume\ the\ MouseEvent\r\n\ \r\n\ @param\ e\ -\ MouseEvent\ that\ calls\ the\ function\r\n
comment40.params=
comment40.target=int\ chooseTrainFromDeck()
comment40.text=\r\n\ Returns\ 0\ through\ 5\ depending\ on\ \r\n\ which\ card\ you\ clicked.\ labeled\ as\:\r\n\ top\ row\:\ 0\ 1\r\n\ middle\ row\:\ 2\ 3\r\n\ bottom\ row\:\ 4\ 5\r\n\ or\ -1\ if\ you\ did\ not\ click\ any\ of\ the\ cards\r\n\ @return\ int\ -\ card\ chosen\ based\ from\ label\ above\r\n\ or\ -1\ if\ you\ did\ not\ click\ a\ card\r\n
comment41.params=
comment41.target=void\ clickTrainCards()
comment41.text=\r\n\ When\ you\ click\ Train\ Cards\ to\ purhcase,\ it\ determines\ which\ \r\n\ card\ you\ click.\r\n
comment42.params=g
comment42.target=void\ paint(java.awt.Graphics)
comment42.text=\r\n\r\n\r\n\r\n\ \ \ \ \ \ \ \ \ \ \ \ Paint\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ **************************\r\n\r\n\r\n\r\n\r\n\\\r\n\r\n\ \ \ \ /**\r\n\ Paint\ method\ for\ applet.\r\n\ Draws\ left/right/board\ sections.\r\n\ As\ well\ as\ handles\ the\ switching\ of\ a\ player\r\n\ and\ ending\ of\ the\ game\ and\ calling\ the\ end\ game\ applet.\r\n\ \r\n\ @param\ \ g\ \ \ the\ Graphics\ object\ for\ the\ screen\r\n
comment43.params=
comment43.target=void\ resetMouseGlobals()
comment43.text=\r\n\ Resets\ the\ mouse\ global\ variables\ after\ a\ redraw.\ \r\n\ This\ is\ called\r\n\ at\ the\ very\ end\ of\ the\ paint\ method\r\n
comment44.params=width\ height
comment44.target=void\ appletResize(int,\ int)
comment44.text=\r\n\ Makes\ board\ an\ applet\ sub\ and\ resizes\ it\r\n\ @param\ width\ -\ width\ to\ resize\ it\r\n\ @param\ height\ -\ height\ to\ resize\ it\ to\r\n
comment5.params=e
comment5.target=void\ mouseMoved(java.awt.event.MouseEvent)
comment5.text=\r\n\ Saves\ the\ coordinates\ of\ where\ the\ mouse\r\n\ is\ hovering\r\n\ \r\n\ @param\ e\ -\ MouseEvent\r\n
comment6.params=e
comment6.target=void\ mouseExited(java.awt.event.MouseEvent)
comment6.text=\r\n\ If\ the\ mouse\ is\ exited.\ Overrided\ method\ that\ only\ \r\n\ consumes\ the\ mouse\ event\ e\r\n\ @param\ e\ -\ MouseEvent\ that\ triggers\ the\ call\ of\ this\ method\r\n
comment7.params=e
comment7.target=void\ mousePressed(java.awt.event.MouseEvent)
comment7.text=\r\n\ If\ the\ mouse\ is\ pressed.\ Overrided\ method\ that\ \r\n\ only\ consumes\ the\ mouse\ event\ e\r\n\ @param\ e\ -\ MouseEvent\ that\ triggers\ the\ call\ of\ this\ method\r\n
comment8.params=e
comment8.target=void\ mouseReleased(java.awt.event.MouseEvent)
comment8.text=\r\n\ If\ the\ mouse\ is\ released.\ Overrided\ method\ that\ only\ \r\n\ consumes\ the\ mouse\ event\ e\r\n\ @param\ e\ -\ MouseEvent\ that\ triggers\ the\ call\ of\ this\ method\r\n
comment9.params=e
comment9.target=void\ mouseWheelMoved(java.awt.event.MouseWheelEvent)
comment9.text=\r\n\ Determines\ if\ you\ scroll\ up\ or\ down\r\n\ @param\ e\ -\ MouseWheelEvent\r\n
numComments=45
