#BlueJ class context
comment0.params=c1\ c2\ g\ e
comment0.target=Track(java.lang.String,\ java.lang.String,\ java.util.ArrayList,\ java.util.ArrayList)
comment0.text=\r\n\ Constructs\ the\ individual\ Track\r\n\ \r\n\ @param\ c1\ city\ name\r\n\ @param\ c2\ city\ name\r\n\ @param\ g\ list\ of\ points\ in\ the\ train\r\n\ @param\ e\ ArrayList\ of\ colors\ need\ to\ purchase\ Track\r\n
comment1.params=
comment1.target=java.lang.String\ getCost()
comment1.text=\r\n\ Returns\ the\ cost\ in\ the\ form\ of\ a\ string\r\n\ @return\ String\ of\ what\ to\ draw\ for\ the\ player\r\n
comment10.params=
comment10.target=boolean\ isSinglePath()
comment10.text=\r\n\ Determines\ if\ it\ is\ a\ single\ path\ or\ not\r\n\ @return\ true\ if\ it\ is\ a\ single\ path\ or\ \r\n\ false\ if\ it\ is\ a\ double\ path\r\n
comment11.params=
comment11.target=void\ setFerryPath()
comment11.text=\r\n\ Sets\ the\ track\ if\ it\ is\ a\ ferry\ track\r\n
comment12.params=
comment12.target=boolean\ isFerry()
comment12.text=\r\n\ Returns\ true\ if\ it\ is\ a\ ferry\ path\ and\ false\ otherwise\r\n\ @return\ true\ if\ it\ is\ a\ ferry\ path\ or\ false\ otherwise\r\n
comment13.params=t
comment13.target=void\ setDoublePath(Track)
comment13.text=\r\n\ Connects\ one\ track\ to\ the\ other\r\n\ @param\ t\ -\ Other\ Track\ that\ you\ are\ setting\ a\ double\ path\ to\r\n
comment14.params=t
comment14.target=void\ setOtherPath(Track)
comment14.text=\r\n\ Sets\ the\ otherPath\ Track\ variable\ to\ t\r\n\ @param\ t\ -\ Track\ to\ set\ the\ OtherPath\ to\r\n
comment15.params=playerColor
comment15.target=void\ addPlayerToTrack(java.awt.Color)
comment15.text=\r\n\ Adds\ the\ player\ who\ bought\ this\ track\r\n\ @param\ playerColor\ -\ player\ who\ just\ bought\ track\r\n
comment16.params=playerColor
comment16.target=boolean\ playerOwns(java.awt.Color)
comment16.text=\r\n\ Returns\ true\ if\ the\ player\ owns\ this\ track\ and\r\n\ false\ otherwise.\r\n\ @param\ playerColor\ -\ the\ color\ of\ the\ player\r\n\ @return\ true\ if\ the\ player\ owns\ this\ color\ or\r\n\ false\ otherwise\r\n
comment17.params=p
comment17.target=int\ getValue(Player)
comment17.text=\r\n\ Get\ the\ value\ the\ Track\ is\ worth\ based\ off\ \r\n\ of\ the\ length\ of\ the\ Track\ and\ the\ technology\r\n\ cards\ the\ player\ has\r\n\ @param\ p\ -\ Player\ who\ bought\ the\ track\r\n\ @return\ int\ value\ of\ points\ earned\r\n
comment18.params=
comment18.target=boolean\ occupied()
comment18.text=\r\n\ Returns\ true\ if\ the\ Track\ is\ occupied\ or\ false\ otherwise\r\n\ @return\ true\ if\ the\ Track\ is\ occupied\ or\ false\ otherwise\r\n
comment19.params=
comment19.target=java.lang.String\ getCity1()
comment19.text=\r\n\ Returns\ the\ first\ city\ name\r\n\ @return\ name\ of\ first\ city\ for\ the\ Track\r\n
comment2.params=count\ singular\ plural
comment2.target=java.lang.String\ plural(int,\ java.lang.String,\ java.lang.String)
comment2.text=\r\n\ Returns\ the\ singular\ or\ plural\ word\ depending\ on\ the\ number\r\n\ of\ trains\r\n\ @param\ count\ the\ number\ of\ trains\r\n\ @param\ singular\ the\ singular\ version\ of\ the\ word\r\n\ @param\ plural\ the\ plural\ version\ of\ the\ word\r\n\ @return\ the\ singular\ or\ plural\ version\ of\ the\ word\r\n
comment20.params=
comment20.target=java.lang.String\ getCity2()
comment20.text=\r\n\ Returns\ the\ second\ city\ name\ for\ the\ Track\r\n\ @return\ name\ of\ the\ secnod\ city\ for\ the\ Track\r\n
comment21.params=
comment21.target=int\ getLength()
comment21.text=\r\n\ Returns\ the\ length\ of\ the\ path\r\n\ \r\n\ @return\ the\ length\ of\ the\ path\r\n
comment22.params=
comment22.target=void\ markVisited()
comment22.text=\r\n\ If\ this\ path\ has\ been\ visited,\ mark\ it\ as\ being\ visited\r\n
comment23.params=
comment23.target=void\ markUnvisited()
comment23.text=\r\n\ If\ the\ path\ was\ not\ visited,\ mark\ it\ as\ not\ being\ visited\r\n
comment24.params=
comment24.target=boolean\ isVisited()
comment24.text=\r\n\ Returns\ the\ boolean\ value\ of\ if\ the\ track\ has\ been\ visited\ \r\n\ or\ not.\r\n\ @return\ true\ if\ the\ track\ was\ visited\ and\ false\ if\ it\r\n\ was\ not\ visited\r\n
comment3.params=p
comment3.target=boolean\ playerOwn(Player)
comment3.text=\r\n\ Determines\ if\ the\ player\ owns\ the\ track\r\n\ @param\ p\ -\ player\ in\ question\r\n\ @return\ true\ if\ player\ bought\ track\ or\ false\ if\r\n\ player\ did\ not\ buy\ the\ track\r\n
comment4.params=p\ playerTrains
comment4.target=boolean\ playerHasEnoughCardsToBuy(Player,\ int[])
comment4.text=\r\n\ Determines\ if\ the\ player\ has\ enough\ cards\r\n\ to\ buy\ the\ track.\ This\ only\ returns\ true\ if\ you\ \r\n\ have\ exactly\ the\ right\ amount\ of\ cards.\ \r\n\ @param\ p\ -\ Player\ wanting\ to\ buy\ the\ track\r\n\ @param\ playerTrains\ -\ integer\ array\ of\ number\ of\ train\ cards\r\n\ in\ the\ order\ of\:\r\n\ WHITE,\ BLUE,\ YELLOW,\ BLACK,\ RED,\ GREEN,\ ORANGE,\ PINK,\r\n\ LOCOMOTIVE\r\n\ @return\ true\ if\ the\ player\ can\ buy\ this\ track\ or\ false\ \r\n\ otherwise\r\n
comment5.params=locoCards\ t\ playCards\ grayIndex
comment5.target=boolean\ checkCards(int,\ java.util.ArrayList,\ int[],\ int)
comment5.text=\r\n\ Checks\ if\ player\ has\ enough\ cards\r\n\ @param\ locoCards\ -\ either\ 3\ or\ 4\ cards\ count\ as\ a\ locomotive\r\n\ @param\ t\ -\ ArrayList<Ecolor>\ list\ of\ colors\ to\ buy\ train\r\n\ @param\ playCards\ -\ int[]\ number\ of\ each\ card\ player\r\n\ has\ in\ order\:\r\n\ WHITE,\ BLUE,\ YELLOW,\ BLACK,\ RED,\ GREEN,\ ORANGE,\ PINK,\ \r\n\ LOCOMOTIVE\r\n\ @param\ grayIndex\ -\ if\ there\ is\ a\ gray\ space,\ what\ color\ \r\n\ to\ count\r\n\ the\ graytile\ as\r\n\ @return\ true\ if\ the\ player\ has\ the\ exact\ amount\ of\ cards\ \r\n\ to\ buy\ the\ space\ or\ false\ otherwise\r\n
comment6.params=
comment6.target=java.util.ArrayList\ getColors()
comment6.text=\r\n\ Returns\ all\ the\ players\ who\ own\ the\ track\r\n\ @return\ arraylist\ of\ all\ the\ player\ colors\ who\ \r\n\ own\ the\ track\r\n
comment7.params=c
comment7.target=void\ addPlayer(java.awt.Color)
comment7.text=\r\n\ Add\ owner\ to\ the\ track\r\n\ @param\ c\ -\ Color\ of\ player\ who\ bought\ the\ track\r\n
comment8.params=p
comment8.target=boolean\ playerCanBuy(Player)
comment8.text=\r\n\ Determines\ if\ a\ player\ can\ buy\ a\ track.\r\n\ Does\ not\ check\ if\ the\ player\ has\ the\ right\r\n\ amount\ of\ cards.\ \r\n\ @param\ p\ -\ player\ wanting\ to\ buy\ the\ track\r\n\ @return\ true\ if\ the\ player\ can\ buy\ it\ or\ false\ \r\n\ otherwise\r\n
comment9.params=
comment9.target=java.util.ArrayList\ getGraphicsPoints()
comment9.text=\r\n\ Get\ graphics\ points\r\n\ @return\ ArrayList<Polygon>\ all\ of\ the\ graphics\r\n\ polygons\ for\ the\ track\r\n
numComments=25
