#BlueJ class context
comment0.params=name\ color
comment0.target=Player(java.lang.String,\ java.awt.Color)
comment0.text=\r\n\ Each\ player\ is\ constructed\ with\ a\ name,\ \#of\ trains,\ \r\n\ \#of\ points,\ a\ color,\r\n\ and\ other\ empty\ datapoints\ which\ help\ tally\ \r\n\ statistics\ at\ the\ end\ of\ a\ game.\r\n\ \r\n\ @param\ name\ Player's\ name\r\n\ @param\ color\ Player's\ color\r\n
comment1.params=
comment1.target=boolean\ takeLastTurn()
comment1.text=\r\n\ Returns\ whether\ the\ player\ took\ their\ last\ turn\r\n\ \r\n\ @return\ true\ if\ the\ player\ already\ took\ their\ \r\n\ last\ turn\ or\ false\ otherwise\r\n
comment10.params=points
comment10.target=void\ incNumOfPoints(int)
comment10.text=\r\n\ This\ method\ increases\ the\ number\ of\ points\r\n\ \r\n\ @param\ points\ number\ of\ points\ added\ \r\n
comment11.params=
comment11.target=void\ setHand()
comment11.text=\r\n\ Get\ new\ Hand,\ asks\ the\ deck\ class\ for\ 4\ new\ train\ cards\r\n\ and\ sets\ the\ players\ trainCard\ hand\r\n
comment12.params=color
comment12.target=void\ addTrainCard(EColor)
comment12.text=\r\n\ Get\ a\ new\ card,\ the\ player\ gets\ a\ new\ card\ to\ their\ hand\r\n\ \r\n\ @param\ EColor\ color\ to\ add\ to\ the\ pile\r\n
comment13.params=train
comment13.target=void\ addTrainCards(int[])
comment13.text=\r\n\ Adds\ back\ the\ train\ cards\ to\ the\ players\ hand\ if\ they\ clicked\r\n\ on\ the\ back\ button\r\n\ \r\n\ @param\ train\ -\ int\ array\ of\ train\ cards\ \r\n\ to\ add\ back\ in\ order\ of\:\ WHITE,\ BLUE,\ YELLOW,\ \r\n\ BLACK,\ RED,\ GREEN,\ ORANGE,\ PINK,\ LOCOMOTIVE\r\n
comment14.params=d
comment14.target=void\ addDesCard(Destination)
comment14.text=\r\n\ Get\ new\ destination\ card,\ selected\ from\ board\r\n\ to\ add\ to\ the\ players\ hand.\r\n\ \r\n\ @param\ d\ destination\ card\ being\ added\ to\ the\r\n\ players\ hand\r\n
comment15.params=
comment15.target=Destination\ getCurDest()
comment15.text=\r\n\ Gets\ the\ current\ players\ destination\ card\r\n\ \r\n\ @return\ Destination\ card\r\n
comment16.params=i
comment16.target=void\ shiftDest(int)
comment16.text=\r\n\ Shifts\ the\ current\ destination\ card\r\n\ being\ shown\ by\ i\r\n\ \r\n\ @param\ i\ -\ amount\ to\ be\ shifted\ by\r\n
comment17.params=e
comment17.target=EColor\ getTrainCard(EColor)
comment17.text=\r\n\ Goes\ throught\ the\ players\ hand\ and\ returns\ a\ card\r\n\ of\ the\ specified\ color\r\n\ \r\n\ @param\ e\ -\ EColor\ color\ of\ train\ card\r\n\ we\ are\ looking\ for\r\n\ @return\ EColor\ so\ the\ train\ card\ of\ that\ color\r\n\ or\ null\ if\ there\ is\ none\r\n
comment18.params=
comment18.target=int[]\ getColorArray()
comment18.text=\r\n\ Gets\ the\ color\ cards\ for\ the\ player\ and\ puts\ in\ an\ array\r\n\ where\ the\ indices\ follow\ the\ order\:\r\n\ \ 0-WHITE,\ 1-BLUE,\ 2-YELLOW,\ 3-BLACK,\r\n\ \ 4-RED,\ 5-GREEN,\ 6-ORANGE,\ 7-PINK,\ 8-LOCOMOTIVE;\r\n\ \r\n\ @return\ array\ of\ integer\ values\ for\ the\ number\ of\ \r\n\ colors\ in\ each\r\n\ type\r\n
comment19.params=city1\ city2
comment19.target=boolean\ canBuildInArea(Country,\ Country)
comment19.text=\r\n\ Given\ the\ Enum\ Area\ of\ the\ country,\ \r\n\ it\ tells\ you\ if\ you\ can\ build\ there\ or\ not\r\n\ \r\n\ @param\ city1\ Enum\ of\ city1\ wanting\ to\ build\r\n\ @param\ city2\ Enum\ of\ city2\ wanting\ to\ build\r\n\ @return\ true\ if\ you\ can\ build\ or\ false\ otherwise\r\n
comment2.params=
comment2.target=int\ getDestCardsComplete()
comment2.text=\r\n\ Returns\ the\ number\ of\ completed\ destination\ tickets\r\n\ \r\n\ @return\ returns\ the\ number\ of\ completed\ destination\ tickets\r\n
comment20.params=length
comment20.target=boolean\ canBuildLength(int)
comment20.text=\r\n\ Determines\ if\ you\ have\ the\ right\ technology\ cards\r\n\ to\ build\ the\ track\ based\ on\ the\ length\r\n\ \r\n\ @param\ length\ length\ of\ path\ you\ want\ to\ build\r\n\ @return\ boolean\ true\ if\ you\ can\ build\ it\ or\ false\ otherwise\r\n
comment21.params=
comment21.target=boolean\ canBuildFerry()
comment21.text=\r\n\ Determines\ if\ you\ can\ build\ on\ a\ track\r\n\ whether\ it\ is\ a\ ferry\ track\ or\ not\r\n\ \r\n\ @return\ true\ if\ you\ can\ build\ on\ the\ track\ or\ false\ otherwise\r\n
comment22.params=
comment22.target=boolean\ haveBooster()
comment22.text=\r\n\ If\ you\ have\ the\ boost\ technology\ card\ or\ not.\r\n\ Booster\:\ you\ many\ now\ use\ any\ 3\ cards\ as\ a\ locomotive\r\n\ (instead\ of\ 4\ cards)\r\n\ \r\n\ @return\ true\ if\ you\ have\ it\ or\ false\ otherwise\r\n
comment23.params=
comment23.target=boolean\ hasBoilerLagging()
comment23.text=\r\n\ If\ you\ have\ the\ boiler\ lagging\ technology\ card\ or\ not.\r\n\ You\ score\ 1\ extra\ point\ for\ each\ Track\ that\ you\ claim\r\n\ \r\n\ @return\ true\ if\ you\ have\ it\ or\ false\ otherwise\r\n
comment24.params=
comment24.target=boolean\ hasSteamTurbines()
comment24.text=\r\n\ If\ you\ have\ the\ steamturbines\ technology\ card\ or\ not.\r\n\ You\ score\ 2\ extra\ points\ for\ each\ ferry\ Track\ that\ you\ \r\n\ claim.\r\n\ \r\n\ @return\ true\ if\ you\ have\ it\ or\ false\ otherwise\r\n
comment25.params=
comment25.target=boolean\ hasRightOfWay()
comment25.text=\r\n\ Determines\ if\ the\ player\ has\ the\ right\ of\ way\ card.\r\n\ You\ may\ play\ this\ card\ to\ claim\ a\ route\ that\ was\ already\r\n\ claimed\ by\ another\ player.\ When\ playing\ this\ card,\ you\r\n\ must\ still\ play\ the\ correct\ number\ of\ cards\ to\ claim\ the\r\n\ route.\ Simply\ place\ your\ trains\ on\ it\ next\ to\ the\ other\r\n\ player's\ trains.\ You\ must\ immediately\ claim\ the\ route\r\n\ when\ you\ take\ this\ card,\ and\ after\ you\ have\ claimed\ the\r\n\ route,\ you\ return\ the\ card\ to\ the\ table\ so\ it\ can\ be\ taken\r\n\ by\ another\ player.\r\n\ \r\n\ @return\ true\ if\ the\ player\ has\ it\ or\ false\ otherwise\r\n
comment26.params=
comment26.target=boolean\ hasThermocompressor()
comment26.text=\r\n\ Determines\ if\ the\ player\ has\ the\ thermocompressor\ card.\r\n\ Claim\ 2\ Routes\ this\ turn,\ then\ return\ this\ card.\r\n\ \r\n\ @return\ true\ if\ the\ player\ has\ it\r\n\ or\ false\ otherwise\r\n
comment27.params=
comment27.target=void\ removeTech()
comment27.text=\r\n\ Removes\ the\ right\ of\ way\ card\ and\ the\ thermocompressor\r\n
comment28.params=
comment28.target=boolean\ hasWaterTenders()
comment28.text=\r\n\ Determines\ if\ the\ player\ has\ the\ water_tenders\ card.\r\n\ When\ drawing\ Train\ Cards,\ you\ can\ decide\ to\ draw\ 3\ \r\n\ blind\ cards\ instead\ of\ the\ regular\ 2.\ \r\n\ \r\n\ @return\ true\ if\ the\ player\ has\ it\ or\ false\ otherwise\r\n
comment29.params=
comment29.target=boolean\ hasRiskyContracts()
comment29.text=\r\n\ Returns\ true\ if\ the\ player\ has\ risky\ contracts\ or\r\n\ false\ otherwise\r\n\r\n@return\ true\ if\ the\ player\ has\ risky\ contracts\ \r\n\ or\ false\ otherwise\r\n
comment3.params=name
comment3.target=void\ setName(java.lang.String)
comment3.text=\r\n\ This\ method\ sets\ the\ name\ of\ the\ player\r\n\ \r\n\ @param\ name\ -\ name\ of\ the\ player\r\n
comment30.params=
comment30.target=boolean\ hasEqualisingBeam()
comment30.text=\r\n\ Returns\ true\ if\ the\ player\ has\ equalising\ beam\ \r\n\ or\ false\ otherwise\r\n\ \r\n\ @return\ true\ if\ the\ player\ has\ equalising\ beam\ \r\n\ or\ false\ otherwise\r\n
comment31.params=
comment31.target=boolean\ hasDoubleHeading()
comment31.text=\r\n\ Determines\ if\ the\ player\ has\ the\ double\r\n\ heading\ card\r\n\ At\ the\ end\ of\ the\ game,\ you\ score\ 2\ points\r\n\ for\ each\ Ticket\ that\ you\ completed.\r\n\ \r\n\ @return\ boolean\ true\ if\ the\ player\ has\ it\ or\ false\ otherwise\r\n
comment32.params=
comment32.target=boolean\ hasDieselPower()
comment32.text=\r\n\ Determines\ if\ you\ have\ the\ Diesel\ Power\ technology\r\n\ card.\r\n\ \r\n\ @return\ true\ if\ you\ have\ the\ diesel\ power\ card\r\n\ or\ false\ otherwise\r\n
comment33.params=
comment33.target=java.awt.Image\ getCurTechCard()
comment33.text=\r\n\ gets\ the\ current\ image\ to\ show\r\n\ \r\n\ @return\ image\ current\ player\ tech\ card\ image\r\n
comment34.params=tech
comment34.target=void\ addTechCard(ETech)
comment34.text=\r\n\ Adds\ tech\ card\ to\ players\ hand\r\n\ \r\n\ @param\ tech\ adds\ tech\ card\ to\ players\ hand\r\n
comment35.params=i
comment35.target=void\ shiftTech(int)
comment35.text=\r\n\ Shift\ the\ tech\ cards\ to\ display\r\n\ \r\n\ @param\ i\ -\ amount\ to\ shift\ by\r\n
comment36.params=
comment36.target=int\ completedDestinationTickets()
comment36.text=\r\n\ Determines\ how\ many\ complete\ destination\ tickets\r\n\ the\ player\ has\ done.\ Adds\ to\ the\ count.\r\n\r\n\ If\ you\ completed\ the\ destination\ card\ then\ you\ get\r\n\ the\ points\ (and\ if\ you\ have\ Double\ Heading\ then\ you\ \r\n\ get\ more\ points)\r\n\ \r\n\ @return\ int\ -\ number\ of\ dest\ cards\ complete\r\n
comment4.params=
comment4.target=java.lang.String\ getName()
comment4.text=\r\n\ This\ method\ returns\ the\ name\ of\ the\ player\r\n\ \r\n\ @return\ this.name\ name\ of\ the\ player\r\n
comment5.params=color
comment5.target=void\ setColor(java.awt.Color)
comment5.text=\r\n\ This\ method\ sets\ the\ color\ of\ the\ player\r\n\ \r\n\ @param\ color\ color\ of\ the\ player\r\n
comment6.params=
comment6.target=java.awt.Color\ getColor()
comment6.text=\r\n\ This\ method\ returns\ the\ color\ of\ the\ player\r\n\ \r\n\ @return\ this.color\ color\ of\ the\ player\r\n
comment7.params=
comment7.target=int\ getNumOfTrains()
comment7.text=\r\n\ This\ method\ returns\ the\ number\ of\ the\ player's\ trains\r\n\ \r\n\ @return\ numOfTrains\ number\ of\ trains\ \r\n
comment8.params=pathMadeLen
comment8.target=boolean\ decreaseNumOfTrains(int)
comment8.text=\r\n\ This\ method\ decrease\ the\ number\ of\ the\ player's\ train\r\n\ \r\n\ @param\ pathMade\ length\ of\ the\ path\ made\ \r\n\ @return\ true\ True\ if\ player\ has\ 0,\ 1\ and\ 2\ trains,\ \r\n\ false\ otherwise\ \r\n
comment9.params=
comment9.target=int\ getNumOfPoints()
comment9.text=\r\n\ This\ method\ returns\ the\ number\ of\ player's\ points\r\n\ \r\n\ @return\ numOfPoints\ number\ of\ player's\ points\ \r\n
numComments=37
